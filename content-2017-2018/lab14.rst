Контрольная работа
##################

:date: 2017-12-12 20:10

.. default-role:: code
.. contents:: Содержание

Задачи на "отлично"
===================

В скобках указан максимальный балл за данную задачу.

- Двумерный массив (8/10)
- Стек:
  - на динамическом массиве фиксированного размера (8/10)
  - на динамическом массиве с автоматической реаллокацией (9/10)
  - на односвязном списке (9/10)
- Очередь на односвязном списке (9/10)
- Дек на односвязном списке (9/10)
- Кольцевой буфер фиксированного размера (9/10)
- Куча (10/10)
- Бинарное дерево поиска (10/10)
- Квадратная матрица (10/10)


Оценивается:
------------

- использование динамической памяти в идиоме RAII;
- отсутствие утечек памяти по диагностике Valgrind;
- наличие явного конструктора по-умолчанию и деструктора;
- полнота реализации функциональности структуры данных;
- наличие перегруженного оператора для вывода в `std::ostream`;
- перегрузка оператора присванивания и конструктора клонирования для устранения утечек памяти;
- использование шаблонов;
- модульный подход (при отсутствии шаблонов — раздельная компиляция);
- наличие модульных тестов.

Модульные тесты не обязательно делать при помощи Google Test, можно реализовать их своими руками.

Задачи на "хорошо"
==================

В этих задачах нет динамической памяти. По-прежнему требуется минимальное покрытие реализованной функциональности модульными тестами.

- Комплексные числа (7/10)
- Рациональные числа (7/10)
- Вектор 3D (6/10)
- Создать класс Array, содержащий массив фиксированного размера, перегруженным оператором [] и доступом к элементам с конца как к отрицательным (как в Python) (6/10)
- Инкапсулировать в классе RestrictedInt переменную типа int, и - определить для неё арифметические операции. (5/10)
- Инкапсулировать в классе RestrictedDouble переменную типа double, и определить для неё арифметические операции. (5/10)

Задачи на "Удовлетворительно"
=============================

- Создать класс Student, описывающий студента, с приватными полями `name` и `age` и конструктором не по умолчанию. (4/10)
- Создать класс ObjectsCounter, считающий в статическом атрибуте при помощи конструктора и деструктора количество собственных экземпляров (4/10)

--Важно!-- Ваша программа должна компилироваться и работать правильно хотя бы на тривиальном примере.

